(function(modules){var installedModules={};
function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports;
}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};
modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);
module.l=true;
return module.exports;
}__webpack_require__.m=modules;
__webpack_require__.c=installedModules;
__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter});
}};
__webpack_require__.r=function(exports){Object.defineProperty(exports,"__esModule",{value:true});
};
__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"];
}:function getModuleExports(){return module;
};
__webpack_require__.d(getter,"a",getter);
return getter;
};
__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);
};
__webpack_require__.p="";
return __webpack_require__(__webpack_require__.s="./src/nfs/hk/clicktochat.component.js");
})({"./src/components/chatBot/chatBot.js":(function(module,exports){var cssClass={iframe:"cbot-frame",hide:"cbot-frame--hide"};
var chatBot=function(config){this.config=config;
this.el=document.createElement("iframe");
this.el.id="chatBotIFrame";
this.el.classList.add(cssClass.iframe);
this.el.setAttribute("allow","geolocation");
this.isInitialized=false;
};
var chatBotProto=chatBot.prototype;
chatBotProto.init=function(){if(this.isInitialized){return;
}this.el.src=this.config.chatbotUrl+"?ibank=true&title=Stacy&subtitle=Typically%20replies%20instantly";
this.isInitialized=true;
};
chatBotProto.show=function(){this.el.classList.remove(cssClass.hide);
};
chatBotProto.hide=function(){this.el.classList.add(cssClass.hide);
};
chatBotProto.destroy=function(){this.el.src="about:blank";
this.el.remove();
this.el=null;
this.isInitialized=null;
};
module.exports=chatBot;
}),"./src/components/chatRm/chatRm-NFS.js":(function(module,exports,__webpack_require__){var events=__webpack_require__("./src/lib/events.js");
var moxtra=__webpack_require__("./src/lib/moxtraInterface-NFS.js");
var chatRm=function(relId,moxtraLangCode){events(this);
this.relId=relId;
this.moxtraLangCode=moxtraLangCode;
this.cssClass={el:"rmc-container",hide:"rmc-container--hide"};
this.el=document.createElement("div");
this.el.id="rmContainer";
this.el.classList.add(this.cssClass.hide);
this.isInitialized=false;
};
chatRmProto=chatRm.prototype;
chatRmProto.init=function(options){if(this.isInitialized){return;
}setTimeout(function(){moxtra.init(options.onRMInitError,options.onRMChatInitSuccess,options.onRMUnreadMsgEvent,options.onRMTwoFactorAuth,this.el.id,this.moxtraLangCode);
}.bind(this));
this.isInitialized=true;
};
chatRmProto.setRelId=function(relId){this.relId=relId;
};
chatRmProto.show=function(){this.el.classList.remove(this.cssClass.hide);
};
chatRmProto.hide=function(){this.el.classList.add(this.cssClass.hide);
};
chatRmProto.destroy=function(){if(this.el.firstChild){if(this.el.firstChild.tagName=="IFRAME"){this.el.firstChild.src="about:blank";
}this.el.firstChild.remove();
}this.el.remove();
this.el=null;
this.cssClass=null;
this.isInitialized=null;
};
module.exports=chatRm;
}),"./src/components/chatWindowFrame/chatWindowFrame.js":(function(module,exports,__webpack_require__){var events=__webpack_require__("./src/lib/events.js");
var Storage=__webpack_require__("./src/lib/storage.js");
var StorageKeyNames=__webpack_require__("./src/lib/storageNames.js");
var cssClass={frame:"cnk-frame",frameNoHeader:"cnk-frame--noHeader",htmlPlaceholder:"cnk-html-slot",header:"cnk-frame-header",heading:"cnk-frame-heading",showFrame:"cnk-frame--show",minimizeIcon:"cnk-minimize",loadingGif:"cnk-loading",showLoading:"cnk-loading-show",hide:"cnk-frame--hide",moreEllipsis:"cnk-more",moreEllipsisHide:"cnk-more--hide",moreMenu:"cnk-more-menu",moreMenuShow:"cnk-more-menu--show"};
var moreMenuItems={};
var states={show:"s",hide:"h"};
var chatWindowFrame=function(config){events(this);
moreMenuItems=config.moreOptionsMenu;
this.el=null;
this.htmlPlaceholder=null;
this.header=null;
this.heading=null;
this.more=null;
this.minimizeIcon=null;
this.config=config;
this.state=null;
this.previousUrl=null;
this.hide=this.hide.bind(this);
this.show=this.show.bind(this);
this.escKeyHandlerBinded=false;
this.isMoreMenuOn=false;
this.outsideClickedHandler=this.outsideClickedHandler.bind(this);
this.toggleMoreEllipsis=this.toggleMoreEllipsis.bind(this);
this.toggleMoreMenu=this.toggleMoreMenu.bind(this);
this.el=this.create();
this.toggleMoreEllipsis("off");
this.setEventHandlers();
this.loadedComponents={};
this.retrieveState();
setTimeout(function(){this.emit("initcomplete");
}.bind(this));
};
var chatWindowFrameProto=chatWindowFrame.prototype;
chatWindowFrameProto.create=function(){var frame=document.createElement("div");
this.htmlPlaceholder=document.createElement("div");
frame.classList.add(cssClass.frame);
this.htmlPlaceholder.classList.add(cssClass.htmlPlaceholder);
this.header=document.createElement("div");
this.header.classList.add(cssClass.header);
this.heading=document.createElement("span");
this.heading.classList.add(cssClass.heading);
this.header.appendChild(this.heading);
frame.appendChild(this.header);
frame.appendChild(this.htmlPlaceholder);
this.minimizeIcon=document.createElement("img");
this.minimizeIcon.src=this.config.iconPath+this.config.chatCloseImg;
this.minimizeIcon.classList.add(cssClass.minimizeIcon);
frame.appendChild(this.minimizeIcon);
this.more=document.createElement("div");
this.more.id="moreEllipsis";
this.more.classList.add(cssClass.moreEllipsis);
this.more.innerHTML="<span>&hellip;</span>";
this.menu=document.createElement("ul");
this.menu.classList.add(cssClass.moreMenu);
for(var id in moreMenuItems){if(moreMenuItems.hasOwnProperty(id)){var item=document.createElement("li");
item.textContent=moreMenuItems[id].label;
if(moreMenuItems[id].onclick&&typeof moreMenuItems[id].onclick=="function"){item.addEventListener("click",moreMenuItems[id].onclick);
}moreMenuItems.el=item;
this.menu.appendChild(item);
}}this.more.appendChild(this.menu);
frame.appendChild(this.more);
this.loadingGif=document.createElement("img");
this.loadingGif.src=this.config.iconPath+this.config.loadingImg;
this.loadingGif.classList.add(cssClass.loadingGif);
frame.appendChild(this.loadingGif);
document.body.appendChild(frame);
return frame;
};
chatWindowFrameProto.toggleMoreMenu=function(){this.isMoreMenuOn=!this.isMoreMenuOn;
if(this.isMoreMenuOn){this.menu.classList.add(cssClass.moreMenuShow);
}if(!this.isMoreMenuOn){this.menu.classList.remove(cssClass.moreMenuShow);
}};
chatWindowFrameProto.toggleMoreEllipsis=function(mode){if(mode=="on"){this.more.classList.remove(cssClass.moreEllipsisHide);
this.more.addEventListener("click",this.toggleMoreMenu);
}if(mode=="off"){this.more.classList.add(cssClass.moreEllipsisHide);
this.more.removeEventListener("click",this.toggleMoreMenu);
}};
chatWindowFrameProto.setHeaderColor=function(color){if(color=="none"){this.el.classList.add(cssClass.frameNoHeader);
}else{this.el.classList.remove(cssClass.frameNoHeader);
this.header.style.backgroundColor=color;
}};
chatWindowFrameProto.load=function(id,component,options){this.htmlPlaceholder.style.display="none";
for(var componentId in this.loadedComponents){if(componentId!==id&&this.loadedComponents[componentId]){this.loadedComponents[componentId].hide();
}}if(options&&options.headerColor){this.setHeaderColor(options.headerColor);
}if(options&&options.heading){this.heading.textContent=options.heading;
}else{this.heading.textContent="";
}this.minimizeIcon.classList.remove(cssClass.minimizeIcon+"--left");
this.minimizeIcon.classList.remove(cssClass.minimizeIcon+"--right");
if(options&&options.minimizeIconPosition){this.minimizeIcon.classList.add(cssClass.minimizeIcon+"--"+options.minimizeIconPosition.toLowerCase());
}if(options&&options.enableMoreMenu===true){this.toggleMoreEllipsis("on");
}else{if(options&&options.enableMoreMenu===false){this.toggleMoreEllipsis("off");
}}if(!this.loadedComponents[id]){this.htmlPlaceholder.appendChild(component.el);
this.loadedComponents[id]=component;
}this.loadedComponents[id].show();
Storage.persist(StorageKeyNames.activeChatView,id);
this.htmlPlaceholder.style.removeProperty("display");
if(options&&!options.minimized){this.show();
}};
chatWindowFrameProto.destroyComponent=function(id){if(this.loadedComponents[id]){this.loadedComponents[id].destroy();
delete this.loadedComponents[id];
}};
chatWindowFrameProto.setEventHandlers=function(){this.minimizeIcon.addEventListener("click",this.hide);
this.toggleExternalClickHandler("on");
};
chatWindowFrameProto.outsideClickedHandler=function(e){if(!this.el.contains(e.target)){this.hide();
document.removeEventListener("click",this.outsideClickedHandler);
}};
chatWindowFrameProto.toggleExternalClickHandler=function(mode){if(!this.config.minimizeChatOnExternalClick){document.removeEventListener("click",this.outsideClickedHandler);
return;
}if(mode=="on"){document.addEventListener("click",this.outsideClickedHandler);
}if(mode=="off"){document.removeEventListener("click",this.outsideClickedHandler);
}};
chatWindowFrameProto.show=function(){this.el.classList.add(cssClass.showFrame);
this.state=states.show;
this.storeState(this.state);
setTimeout(function(){this.emit("show");
}.bind(this));
};
chatWindowFrameProto.hide=function(){this.el.classList.remove(cssClass.showFrame);
this.state=states.hide;
this.storeState(this.state);
setTimeout(function(){this.emit("hide");
}.bind(this));
};
chatWindowFrameProto.showLoading=function(){this.loadingGif.classList.add(cssClass.showLoading);
};
chatWindowFrameProto.hideLoading=function(){this.loadingGif.classList.remove(cssClass.showLoading);
};
chatWindowFrameProto.storeState=function(state){Storage.persist(StorageKeyNames.frameState,state);
};
chatWindowFrameProto.retrieveState=function(){this.state=Storage.getPersisted(StorageKeyNames.frameState);
if(this.state===states.show){this.show();
return;
}this.state=states.hide;
};
chatWindowFrameProto.getState=function(){return this.state;
};
module.exports=chatWindowFrame;
}),"./src/components/checkbox/checkbox.js":(function(module,exports,__webpack_require__){var events=__webpack_require__("./src/lib/events.js");
var css={chkbox:"amn-chkbox",tickbox:"amn-chkbox-tickbox",label:"amn-chkbox-lbl",checked:"amn-chkbox--checked"};
var checkBox=function(id,appendToElement){events(this);
this.onClick=this.onClick.bind(this);
this.isChecked=false;
this.el=this.create(id);
this.setEventHandlers();
if(appendToElement instanceof Element){appendToElement.appendChild(this.el);
}};
var checkBoxProto=checkBox.prototype;
checkBoxProto.create=function(id){var chkbox=document.createElement("div");
chkbox.id=id;
chkbox.classList.add(css.chkbox);
this.tickbox=document.createElement("div");
this.tickbox.classList.add(css.tickbox);
this.label=document.createElement("div");
this.label.classList.add(css.label);
chkbox.appendChild(this.tickbox);
chkbox.appendChild(this.label);
return chkbox;
};
checkBoxProto.setLabel=function(label){this.label.innerHTML=label;
};
checkBoxProto.setEventHandlers=function(){this.el.addEventListener("click",this.onClick);
};
checkBoxProto.onClick=function(){this.isChecked=!this.isChecked;
if(this.isChecked){this.el.classList.add(css.checked);
this.emit("checked");
return;
}this.el.classList.remove(css.checked);
this.emit("unchecked");
};
module.exports=checkBox;
}),"./src/components/clickToChatWidget/clickToChatWidget-NFS.js":(function(module,exports,__webpack_require__){var FloatingActionMenu=__webpack_require__("./src/components/floatingActionMenu/floatingActionMenu.js");
var Tooltip=__webpack_require__("./src/components/tooltip/tooltip.js");
var CounterBadge=__webpack_require__("./src/components/counterBadge/counterBadge.js");
var ChatWindowFrame=__webpack_require__("./src/components/chatWindowFrame/chatWindowFrame.js");
var loadCss=__webpack_require__("./src/lib/cssloader.js");
var loadJs=__webpack_require__("./src/lib/jsloader.js");
var traverse=__webpack_require__("./src/lib/treeutil.js");
var events=__webpack_require__("./src/lib/events.js");
var getContent=__webpack_require__("./src/lib/localization.js").getContent;
var moxtraInterface=__webpack_require__("./src/lib/moxtraInterface-NFS.js");
var openCenteredWindow=__webpack_require__("./src/lib/popupWindow.js");
var storage=__webpack_require__("./src/lib/storage.js");
var storageKeyNames=__webpack_require__("./src/lib/storageNames.js");
var TermsAndConditions=__webpack_require__("./src/components/termsAndConditions/termsAndConditions.js");
var winMessage=__webpack_require__("./src/lib/windowMessage.js");
var nfsInterface=__webpack_require__("./src/lib/nfsInterface.js");
var ChatRm=__webpack_require__("./src/components/chatRm/chatRm-NFS.js");
var ChatBot=__webpack_require__("./src/components/chatBot/chatBot.js");
var colors={darkBlue:"#005670",brightBlue:"#0091ea"};
var clickToChatWidget=function(config,menuData,tooltipDuration,disableCssAutoLoad,nfsVars){events(this);
this.menu=null;
this.chatFrame=null;
this.needHelpToolTip=null;
this.activeChatView=null;
this.isInitializingRMChat=false;
this.rmChatEnabled=false;
this.chatBotEnabled=false;
this.sendMailEnabled=false;
this.liveChatEnabled=false;
this.countBadges={};
this.menuIsExpanded=false;
this.windowResizeHandlerIsOn=false;
this.disableCssAutoLoad=disableCssAutoLoad;
this.nfsVars=nfsVars;
this.timer=null;
this.config=config;
this.menuData=menuData;
this.tooltipDuration=tooltipDuration;
this.onMenuRenderComplete=this.onMenuRenderComplete.bind(this);
this.onBeforeMenuCollapse=this.onBeforeMenuCollapse.bind(this);
this.onBeforeMenuExpand=this.onBeforeMenuExpand.bind(this);
this.onAfterMenuCollapse=this.onAfterMenuCollapse.bind(this);
this.onAfterMenuExpand=this.onAfterMenuExpand.bind(this);
this.onChatWindowHide=this.onChatWindowHide.bind(this);
this.showRMChatUnreadBadge=this.showRMChatUnreadBadge.bind(this);
this.onRMUnreadMsgEvent=this.onRMUnreadMsgEvent.bind(this);
this.onRMChatInitSuccess=this.onRMChatInitSuccess.bind(this);
this.onRMTwoFactorAuth=this.onRMTwoFactorAuth.bind(this);
this.showCountBadges=this.showCountBadges.bind(this);
this.fetchRefreshToken=this.fetchRefreshToken.bind(this);
};
var clickToChatWidgetProto=clickToChatWidget.prototype;
clickToChatWidgetProto.init=function(){if(!this.menuData[0]){console.log("clicktochatwidget::init menudata invalid");
return;
}nfsInterface.setConfig(this.config);
this.preloadImg();
storageKeyNames.tcDone=this.nfsVars.c2cRelId+"_"+storageKeyNames.tcDone;
storageKeyNames.tcVersion=this.nfsVars.c2cRelId+"_"+storageKeyNames.tcVersion;
this.onIbankLogIn();
this.menu=new FloatingActionMenu(this.menuData,this.config);
this.needHelpToolTip=new Tooltip({position:"left",hideOnWindowResize:true});
this.chatFrame=new ChatWindowFrame(this.config);
this.onChatWindowShow=this.onChatWindowShow.bind(this);
this.onChatWindowHide=this.onChatWindowHide.bind(this);
traverse(this.menuData[0],"submenu",function(menu){this.countBadges[menu.id]=new CounterBadge({id:menu.id+"Counter"},null);
}.bind(this));
this.nfsVars.c2cCustomerSegment.split("").forEach(function(code){switch(code.toUpperCase()){case"C":this.liveChatEnabled=true;
break;
case"B":this.chatBotEnabled=true;
this.liveChatEnabled=true;
break;
case"R":this.rmChatEnabled=true;
break;
case"M":this.sendMailEnabled=true;
break;
}}.bind(this));
this.setEventHandlers();
this.emit("beforeRender");
if(this.config.autoLoadMoxtraJs){loadJs(this.config.moxtraLibPath+"mep.js");
loadJs(this.config.moxtraLibPath+"moxtra-latest.js");
}if(this.disableCssAutoLoad!==true){loadCss(this.config.css,function(){this.render();
if(this.isChatFrameOpen()){this.menu.hide();
}}.bind(this));
}else{if(!this.rmChatEnabled){this.render();
}}if(this.rmChatEnabled){moxtraInterface.setHost(this.config.mxHost);
var onTokenError=function(error){console.log(error);
this.countBadges.rmChat=null;
delete this.countBadges.rmChat;
for(var i=0;
i<this.menuData[0].submenu.length;
i++){if(this.menuData[0].submenu[i].id=="rmChat"){this.menuData[0].submenu.splice(i,1);
break;
}}this.menu.setData(this.menuData);
this.render();
this.rmChatEnabled=false;
};
onTokenError=onTokenError.bind(this);
if(this.config.mxEnableTokenCall&&(this.nfsVars.c2cRMAccessToken==null||this.nfsVars.c2cRMAccessToken=="null")){moxtraInterface.getAccessTokenV2(this.nfsVars.c2cRelId,function(){this.render();
if(this.isFromOTPSuccess()){this.initRMChat();
return;
}}.bind(this),onTokenError);
}else{moxtraInterface.setRMAccessToken(this.nfsVars.c2cRMAccessToken);
this.render();
if(this.isFromOTPSuccess()){this.initRMChat();
return;
}}}if(this.isChatFrameOpen()){this.menu.hide();
this.activeChatView=storage.getPersisted(storageKeyNames.activeChatView);
if(this.activeChatView=="rmchat"&&this.rmChatEnabled&&!this.isFromOTPSuccess()){this.initRMChat(null,this.nfsVars.c2cRelId);
return;
}if(this.activeChatView=="chatbot"&&!this.isFromOTPSuccess()){this.initChatBot();
return;
}if(this.activeChatView=="rmterms"&&this.rmChatEnabled&&!this.isFromOTPSuccess()){this.initRMTermsAndConditions();
return;
}}if(this.nfsVars.c2cUnreadFlag!=null){this.hasLBUnreadMsgFromNfsVars=JSON.parse(this.nfsVars.c2cUnreadFlag)||false;
this.nfsVars.c2cUnreadFlag=null;
delete this.nfsVars.c2cUnreadFlag;
}if(this.nfsVars.c2cRMUnreadFlag!=null){this.hasRMunreadMsgFromNfsVars=JSON.parse(this.nfsVars.c2cRMUnreadFlag)||false;
this.nfsVars.c2cRMUnreadFlag=null;
delete this.nfsVars.c2cRMUnreadFlag;
}storage.del(storageKeyNames.activeChatView);
storage.del(storageKeyNames.frameState);
this.nfsVars.c2cJustLogin=null;
delete this.nfsVars.c2cJustLogin;
storage.persist(storageKeyNames.nfsVars,JSON.stringify(this.nfsVars));
};
clickToChatWidgetProto.setNfsVars=function(nfsVars){this.nfsVars=nfsVars;
};
clickToChatWidgetProto.isChatFrameOpen=function(){return this.chatFrame.getState()=="s";
};
clickToChatWidgetProto.preloadImg=function(){if(document.images){var img=new Image();
img.src=this.config.iconPath+"/"+this.config.loadingImg;
}};
clickToChatWidgetProto.setEventHandlers=function(){this.menu.on("bounceInComplete",this.onMenuRenderComplete);
this.menu.on("beforeExpand",this.onBeforeMenuExpand);
this.menu.on("beforeCollapse",this.onBeforeMenuCollapse);
this.menu.on("afterCollapse",this.onAfterMenuCollapse);
this.menu.on("afterExpand",this.onAfterMenuExpand);
this.chatFrame.on("hide",this.onChatWindowHide);
this.chatFrame.on("show",this.onChatWindowShow);
winMessage.init();
winMessage.on("GetTransferToken",function(){this.fetchRefreshToken();
}.bind(this));
winMessage.on("LiveBankHandover",function(data){var symbol=this.config.livebankUrl.indexOf("?")==-1?"?":"&";
this.chatFrame.hideLoading();
this.chatbot.show();
this.initLiveChat(null,this.config.livebankUrl+symbol+"token="+data.token);
}.bind(this));
winMessage.on("AuthPassThruResult",function(){this.chatFrame.hideLoading();
this.chatFrame.toggleMoreEllipsis("on");
this.chatbot.show();
}.bind(this));
winMessage.on("ChatBotInitializating",function(){this.chatbot.hide();
this.chatFrame.showLoading();
}.bind(this));
winMessage.on("ChatBotTokenError",function(){this.chatbot.show();
this.chatFrame.hideLoading();
}.bind(this));
winMessage.on("ChatbotLanguageSwitch",function(data){storage.persist(storageKeyNames.chatbotLanguage,data.lang);
});
winMessage.on("ibankJustLogInCheck",function(){var isIbankLogin=storage.getPersisted(storageKeyNames.chatbotIbankLogin);
this.chatbot.el.contentWindow.postMessage(JSON.stringify({action:"ibankJustLogInResult",result:isIbankLogin}),"*");
if(isIbankLogin){storage.del(storageKeyNames.chatbotIbankLogin);
}}.bind(this));
winMessage.on("NfsKeepAlive",function(){console.log("CHATBOT SIGNAL KEEPALIVE");
this.requestIbankingKeepAlive();
}.bind(this));
};
clickToChatWidgetProto.onMenuRenderComplete=function(){this.showMainTooltip();
setTimeout(function(){var hasLBUnreadMsg;
var hasRMUnreadMsg;
this.emit("initialRenderComplete");
if(this.config.stacyTwoFAEnabled){if(this.nfsVars.twoFAStatus!="1"){this.menu.toggleClickHandler("off");
c2cMenuItem=this.menu.el.querySelector("li[data-flm-id=ctoc]");
c2cMenuItem.addEventListener("click",function(){window.location.href=this.config.stacyTwoFAUrl+"?pageName="+this.nfsVars.c2cPageName;
}.bind(this));
}}if(this.rmChatEnabled){this.getInitialRMUnreadCount();
hasRMUnreadMsg=JSON.parse(storage.getPersisted(storageKeyNames.rmUnread));
}if(this.liveChatEnabled){hasLBUnreadMsg=JSON.parse(storage.getPersisted(storageKeyNames.lbUnread));
if(hasLBUnreadMsg!=null){if(hasLBUnreadMsg==true){this.showLBChatUnreadBadge();
this.setUnreadClickBehaviours(hasLBUnreadMsg,hasRMUnreadMsg);
}}else{if(this.config.livebankUnreadCheckDisabled!==true){nfsInterface.checkIfLiveBankHasUnreadMessages().hasUnread(function(){this.showLBChatUnreadBadge();
storage.persist(storageKeyNames.lbUnread,true);
hasLBUnreadMsg=true;
this.setUnreadClickBehaviours(hasLBUnreadMsg,hasRMUnreadMsg);
}.bind(this)).noUnread(function(){this.setUnreadClickBehaviours(hasLBUnreadMsg,hasRMUnreadMsg);
}.bind(this));
}}}}.bind(this));
};
clickToChatWidgetProto.setUnreadClickBehaviours=function(hasLBUnreadMsg,hasRMUnreadMsg){if(hasLBUnreadMsg&&hasRMUnreadMsg){this.initLiveChat=this.initLiveChat.bind(this);
this.overrideStacyClickHandler(this.initLiveChat);
return;
}if(hasLBUnreadMsg&&!hasRMUnreadMsg){this.initLiveChat=this.initLiveChat.bind(this);
this.overrideStacyClickHandler(this.initLiveChat);
return;
}if(!hasLBUnreadMsg&&hasRMUnreadMsg){this.initRMChat=this.initRMChat.bind(this);
this.overrideStacyClickHandler(this.initRMChat);
return;
}};
clickToChatWidgetProto.overrideStacyClickHandler=function(fnNewClickHandler){this.menu.toggleClickHandler("off");
this.menu.el.querySelector("li[data-flm-id=ctoc]").addEventListener("click",fnNewClickHandler);
};
clickToChatWidgetProto.resetStacyClickHandler=function(fnOverriceClickHandler){this.menu.el.querySelector("li[data-flm-id=ctoc]").removeEventListener("click",fnOverriceClickHandler);
this.menu.toggleClickHandler("on");
};
clickToChatWidgetProto.toggleWindowResizeHandler=function(mode){var toggleEventListener=mode=="on"?"addEventListener":"removeEventListener";
window[toggleEventListener]("resize",this.showCountBadges);
if(mode=="on"){this.windowResizeHandlerIsOn=true;
}else{this.windowResizeHandlerIsOn=false;
}};
clickToChatWidgetProto.requestIbankingKeepAlive=function(){var onSuccess;
var onFailure;
onFailure=function(){window.location.assign(this.config.loginUrl);
}.bind(this);
onSuccess=function(data){if(data.extendSession==null||data.extendSession=="null"){onFailure();
}else{if(data.extendSession==true||data.extendSession=="true"){if(window.clearTimeout&&window.c2cSessionTimer){clearTimeout(window.c2cSessionTimer);
}if(window.startSessionTimer&&data.maxInactiveInterval){startSessionTimer(data.maxInactiveInterval);
}}else{onFailure();
}}};
nfsInterface.requestKeepAlive(this.config.keepAliveUrlNfs,onSuccess,onFailure);
};
clickToChatWidgetProto.onIbankLogIn=function(){if(this.nfsVars.c2cJustLogin===true||this.nfsVars.c2cJustLogin=="true"){storage.persist(storageKeyNames.chatbotIbankLogin,"true");
}};
clickToChatWidgetProto.showCountBadges=function(){for(var menuId in this.countBadges){if(this.countBadges.hasOwnProperty(menuId)){if(!this.isMenuExpanded&&this.menuData[0].id==menuId){this.countBadges[menuId].attachTo(this.menu.el.querySelector("li[data-flm-id="+menuId+"]"),-58,-55);
this.countBadges[menuId].show();
break;
}if(this.isMenuExpanded&&this.menuData[0].id==menuId){continue;
}if(this.countBadges[menuId].getCount()!=null){this.countBadges[menuId].attachTo(this.menu.el.querySelector("li[data-flm-id="+menuId+"]"),-60,-58);
}this.countBadges[menuId].show();
}}if(!this.windowResizeHandlerIsOn){this.toggleWindowResizeHandler("on");
}};
clickToChatWidgetProto.clearCountBadges=function(){for(var menuId in this.countBadges){if(this.countBadges.hasOwnProperty(menuId)){this.countBadges[menuId].setCount(null);
this.countBadges[menuId].hide();
}}};
clickToChatWidgetProto.clearLBUnreadBadge=function(){if(this.countBadges.txtChat){this.countBadges.txtChat.setCount(null);
this.countBadges.txtChat.hide();
}if(this.countBadges.chatBot){this.countBadges.chatBot.setCount(null);
this.countBadges.chatBot.hide();
}if(this.countBadges.rmChat&&this.countBadges.rmChat.getCount()==null){this.countBadges.ctoc.setCount(null);
this.countBadges.ctoc.hide();
}if(this.countBadges.rmChat==null){this.countBadges.ctoc.setCount(null);
this.countBadges.ctoc.hide();
}storage.persist(storageKeyNames.lbUnread,null);
};
clickToChatWidgetProto.clearRMUnreadBadge=function(){var hasRMunreadMsg=false;
if(this.countBadges.txtChat&&this.countBadges.txtChat.getCount()!=null){hasRMunreadMsg=true;
}if(this.countBadges.chatBot&&this.countBadges.chatBot.getCount()!=null){hasRMunreadMsg=true;
}if(this.countBadges.rmChat){this.countBadges.rmChat.setCount(null);
this.countBadges.rmChat.hide();
}if(hasRMunreadMsg===false){this.countBadges.ctoc.setCount(null);
this.countBadges.ctoc.hide();
}storage.persist(storageKeyNames.rmUnread,null);
};
clickToChatWidgetProto.hideCountBadges=function(){for(var menuId in this.countBadges){if(this.countBadges.hasOwnProperty(menuId)){this.countBadges[menuId].hide();
}}this.toggleWindowResizeHandler("off");
};
clickToChatWidgetProto.onBeforeMenuCollapse=function(){this.hideCountBadges();
};
clickToChatWidgetProto.onBeforeMenuExpand=function(){this.emit("beforeExpand");
this.hideCountBadges();
this.needHelpToolTip.hideToolTip();
};
clickToChatWidgetProto.onAfterMenuCollapse=function(){this.isMenuExpanded=false;
this.showCountBadges();
this.emit("afterCollapse");
};
clickToChatWidgetProto.onAfterMenuExpand=function(){this.isMenuExpanded=true;
this.showCountBadges();
this.emit("afterExpand");
};
clickToChatWidgetProto.showMainTooltip=function(duration){duration=duration||this.tooltipDuration;
this.needHelpToolTip.showToolTip(getContent("stacyToolTipText"),this.menu.el,"left");
if(duration&&typeof duration=="number"){this.timer=setTimeout(function(){this.needHelpToolTip.hideToolTip();
}.bind(this),duration);
}};
clickToChatWidgetProto.updateMsgCount=function(id,count){var targetEl=this.menu.el.querySelector("li[data-flm-id="+id+"]");
this.countBadges[id].setCount(count);
this.countBadges[id].attachTo(targetEl,-20,-20);
this.countBadges[id].show();
};
clickToChatWidgetProto.showInlineChatWindow=function(url){if(this.needHelpToolTip.tooltipIsOn){clearTimeout(this.timer);
this.needHelpToolTip.hideToolTip();
}this.hideCountBadges();
this.menu.hide();
this.chatFrame.show(url);
};
clickToChatWidgetProto.showInlineChatWindowLoading=function(){this.chatFrame.showLoading();
};
clickToChatWidgetProto.hideInlineChatWindowLoading=function(){this.chatFrame.hideLoading();
};
clickToChatWidgetProto.initLiveChat=function(event,url){if(event){event.stopPropagation();
}if(url==null){url=this.config.livebankUrl;
}if(this.config.popupChatWindow){openCenteredWindow(url,"livechatWindow");
this.clearLBUnreadBadge();
this.resetStacyClickHandler(this.initLiveChat);
return;
}this.enableChatHeader();
this.useBrightBlueHeader(true);
this.showInlineChatWindow(url);
this.clearLBUnreadBadge();
this.chatFrame.hide();
this.resetStacyClickHandler(this.initLiveChat);
};
clickToChatWidgetProto.initChatHistory=function(){this.chatbot.hide();
this.chatFrame.showLoading();
this.chatbot.el.contentWindow.postMessage(JSON.stringify({action:"GetChatbotToken"}),"*");
};
clickToChatWidgetProto.showRMChatUnreadBadge=function(){this.countBadges.ctoc.setCount("");
if(this.countBadges.rmChat){this.countBadges.rmChat.setCount("");
}this.showCountBadges();
};
clickToChatWidgetProto.showLBChatUnreadBadge=function(){this.countBadges.ctoc.setCount("");
if(this.countBadges.chatBot){this.countBadges.chatBot.setCount("");
}if(this.countBadges.txtChat){this.countBadges.txtChat.setCount("");
}this.showCountBadges();
};
clickToChatWidgetProto.startRMChatTimer=function(){var delayInMinutes;
delayInMinutes=7;
window.rmSessionTimer=window.setInterval(function(){var lastActiveTimeStamp;
var timeElapsedSinceLastActivity;
lastActiveTimeStamp=Mep.getLastActiveTimestamp();
timeElapsedSinceLastActivity=Math.floor((Date.now()-lastActiveTimeStamp)/1000);
if(timeElapsedSinceLastActivity<delayInMinutes*60){this.requestIbankingKeepAlive();
}}.bind(this),delayInMinutes*60*1000);
};
clickToChatWidgetProto.stopRMChatTimer=function(){if(window.rmSessionTimer){window.clearTimeout(window.rmSessionTimer);
}};
clickToChatWidgetProto.onRMChatInitSuccess=function(){this.hideInlineChatWindowLoading();
this.clearRMUnreadBadge();
this.resetStacyClickHandler(this.initRMChat);
this.activeChatView="rmchat";
storage.persist(storageKeyNames.activeChatView,this.activeChatView);
storage.persist(storageKeyNames.rmUnread,"false");
storage.persist(storageKeyNames.relId,this.nfsVars.c2cRelId);
this.checkTwoFactorStatus(this.nfsVars.twoFAStatus);
if(storage.getPersisted(storageKeyNames.moxtraFirstInitDone)!=="1"){storage.persist(storageKeyNames.moxtraFirstInitDone,"1");
}};
clickToChatWidgetProto.onRMTwoFactorAuth=function(data){switch(data.event_type){case"confirm_transaction":storage.persist(storageKeyNames.twoFA,JSON.stringify(data));
storage.persist(storageKeyNames.frameState,"h");
window.location.assign(this.config.twoFAUrl);
return;
default:return;
}};
clickToChatWidgetProto.isFromOTPSuccess=function(){if(this.nfsVars.twoFAStatus===true){return true;
}return false;
};
clickToChatWidgetProto.checkTwoFactorStatus=function(){var twoFAData;
if(this.nfsVars.twoFAStatus==null){return;
}if(this.nfsVars.twoFAStatus===true){twoFAData=storage.getPersisted(storageKeyNames.twoFA);
if(twoFAData==null){return;
}twoFAData=JSON.parse(twoFAData);
Mep.set2FAStatus(twoFAData);
storage.del(storageKeyNames.twoFA);
this.chatFrame.show();
}};
clickToChatWidgetProto.initRMTermsAndConditions=function(){this.terms=new TermsAndConditions(this.config,this.nfsVars);
this.terms.on("termsConditonsContinue",function(){storage.persist(storageKeyNames.tcDone,"1");
storage.persist(storageKeyNames.tcVersion,this.nfsVars.c2cTandCVersion);
this.initRMChat(null,this.nfsVars.c2cRelId);
this.chatFrame.destroyComponent("rmterms");
}.bind(this));
this.chatFrame.load("rmterms",this.terms,{headerColor:colors.brightBlue,heading:getContent("tcTitle"),minimizeIconPosition:"right",minimized:false,enableMoreMenu:false});
return;
};
clickToChatWidgetProto.initRMChat=function(event,relId){var tcDone;
var tcVersionDone;
if(event){event.stopPropagation();
}if(relId==null){relId=this.nfsVars.c2cRelId;
}tcDone=storage.getPersisted(storageKeyNames.tcDone);
tcVersionDone=storage.getPersisted(storageKeyNames.tcVersion);
if(tcDone!=="1"||tcVersionDone!==this.nfsVars.c2cTandCVersion){this.initRMTermsAndConditions();
return;
}this.rmchat=this.rmchat||new ChatRm(relId,this.nfsVars.c2cMoxtraLang);
this.chatFrame.load("rmchat",this.rmchat,{headerColor:"none",minimizeIconPosition:"right",minimized:false,enableMoreMenu:false});
if(!this.rmchat.isInitialized){this.chatFrame.showLoading();
}this.rmchat.init({onRMChatInitSuccess:this.onRMChatInitSuccess,onRMUnreadMsgEvent:this.onRMUnreadMsgEvent,onRMTwoFactorAuth:this.onRMTwoFactorAuth,onRMInitError:null});
this.clearRMUnreadBadge();
this.activeChatView="rmchat";
};
clickToChatWidgetProto.initChatBot=function(){var botPrevPageLanguage=storage.getPersisted(storageKeyNames.chatbotLanguage);
if(botPrevPageLanguage==null){botPrevPageLanguage=this.nfsVars.c2cLanguage!=null?this.nfsVars.c2cLanguage.substring(0,2):null;
}if(botPrevPageLanguage){if(botPrevPageLanguage.toLowerCase()=="zh"){this.config.chatbotUrl=this.config.chatbotUrl.replace("/en/","/zh/");
}else{this.config.chatbotUrl=this.config.chatbotUrl.replace("/zh/","/en/");
}}this.chatFrame.hideLoading();
this.chatbot=this.chatbot||new ChatBot(this.config);
this.chatFrame.load("chatbot",this.chatbot,{headerColor:colors.brightBlue,minimizeIconPosition:"left",minimized:false,enableMoreMenu:null});
this.chatbot.init();
this.clearLBUnreadBadge();
};
clickToChatWidgetProto.onChatWindowHide=function(data){this.menu.show(true);
this.toggleExternalClickHandler("off");
if(this.activeChatView=="rmchat"){this.getRMUnreadCount(this.nfsVars.c2cRelId);
Mep.portalResize({iframewidth:"0px",iframeheight:"0px"});
this.stopRMChatTimer();
}};
clickToChatWidgetProto.onChatWindowShow=function(){this.needHelpToolTip.hideToolTip();
this.toggleExternalClickHandler("on");
this.menu.hide();
if(this.activeChatView=="rmchat"){setTimeout(function(){try{Mep.portalResize({iframewidth:"100%",iframeheight:"100%"});
}catch(e){console.log(e);
}});
this.startRMChatTimer();
}};
clickToChatWidgetProto.toggleExternalClickHandler=function(mode){this.chatFrame.toggleExternalClickHandler(mode);
};
clickToChatWidgetProto.toggleMenuItemClickHandler=function(mode){this.menu.toggleClickHandler(mode);
};
clickToChatWidgetProto.resetMenu=function(){this.menu.resetMenu();
};
clickToChatWidgetProto.enableChatHeader=function(){this.chatFrame.enableChatHeader();
};
clickToChatWidgetProto.useBrightBlueHeader=function(isBright){this.chatFrame.toggleHeaderBlueTone(isBright);
};
clickToChatWidgetProto.render=function(){if(!this.menu){return;
}this.menu.show();
};
clickToChatWidgetProto.onRMUnreadMsgEvent=function(count){var unreadCount=parseInt(count);
if(isNaN(unreadCount)){storage.persist(storageKeyNames.rmUnread,"false");
this.clearRMUnreadBadge();
return;
}storage.persist(storageKeyNames.rmUnread,"true");
this.showRMChatUnreadBadge();
};
clickToChatWidgetProto.getInitialRMUnreadCount=function(){var hasUnreadMsg=JSON.parse(storage.getPersisted(storageKeyNames.rmUnread));
if(hasUnreadMsg!=null){if(hasUnreadMsg=="true"){this.showRMChatUnreadBadge();
return;
}else{this.clearRMUnreadBadge();
}}if(this.hasRMunreadMsgFromNfsVars==true){storage.persist(storageKeyNames.rmUnread,"true");
this.showRMChatUnreadBadge();
}else{storage.persist(storageKeyNames.rmUnread,"false");
this.clearRMUnreadBadge();
}};
clickToChatWidgetProto.getRMUnreadCount=function(relId){moxtraInterface.reqUnreadFeedsCount(relId,function(unreadCount){unreadCount=parseInt(unreadCount);
if(isNaN(unreadCount)||unreadCount<1){storage.persist(storageKeyNames.rmUnread,"false");
this.clearRMUnreadBadge();
return;
}storage.persist(storageKeyNames.rmUnread,"true");
this.showRMChatUnreadBadge();
}.bind(this),null,function(error){console.log(error);
});
};
clickToChatWidgetProto.fetchRefreshToken=function(){nfsInterface.setEndpointUrl(this.config.nfsRefreshTokenUrl);
nfsInterface.fetchRefreshToken(function(data){if(data.accessToken==null||data.accessToken=="null"){this.chatbot.el.contentWindow.postMessage(JSON.stringify({action:"fetchNFStokenFail"}),"*");
}else{this.chatbot.el.contentWindow.postMessage(JSON.stringify({action:"ibankPassThru",token:data.accessToken}),"*");
}}.bind(this),function(){this.chatbot.el.contentWindow.postMessage(JSON.stringify({action:"fetchNFStokenFail"}),"*");
}.bind(this));
};
module.exports=clickToChatWidget;
}),"./src/components/counterBadge/counterBadge.js":(function(module,exports){var counterBadge=function(config,initialCount){this.el=null;
this.countEl=null;
this.count=null;
this.config=config;
this.cssClass={circle:"c-badge",count:"c-count",show:"c-badge--show"};
this.el=this.create(this.config.id);
if(initialCount){this.setCount(initialCount);
}};
var badgeProto=counterBadge.prototype;
badgeProto.create=function(id){var circleDiv=document.createElement("div");
var countSpan=document.createElement("span");
circleDiv.id=id;
circleDiv.classList.add(this.cssClass.circle);
countSpan.classList.add(this.cssClass.count);
circleDiv.appendChild(countSpan);
document.body.appendChild(circleDiv);
return circleDiv;
};
badgeProto.attachTo=function(targetElement,offsetTop,offsetLeft){if(this.count==null){return;
}var targetRect=targetElement.getBoundingClientRect();
offsetTop=offsetTop||0;
offsetLeft=offsetLeft||0;
this.el.style.top=targetRect.bottom+offsetTop+"px";
this.el.style.left=targetRect.right+offsetLeft+"px";
};
badgeProto.show=function(){if(this.count==null){return;
}this.el.classList.add(this.cssClass.show);
};
badgeProto.hide=function(){this.el.classList.remove(this.cssClass.show);
};
badgeProto.setCount=function(count){this.count=count;
this.countEl=this.countEl||this.el.querySelector("."+this.cssClass.count);
if(this.count!=null){this.countEl.textContent=count.toString();
}};
badgeProto.getCount=function(){return this.count;
};
module.exports=counterBadge;
}),"./src/components/floatingActionMenu/floatingActionMenu.js":(function(module,exports,__webpack_require__){var events=__webpack_require__("./src/lib/events.js");
var floatingActionMenu=function(data,config){var onFirstTouch;
events(this);
this.el=null;
this.level=0;
this.menus={};
this.bounceAnimationOn=true;
this.setConfig(config);
this.setData(data);
this.isRendered=false;
this.currentStyleTransform=null;
this.currentDragPadY=null;
this.currentDragPadX=null;
this.isTouchDevice=false;
this.injectComponent=this.injectComponent.bind(this);
this.calcMenuHeight=this.calcMenuHeight.bind(this);
this.onBounceAnimationEnd=this.onBounceAnimationEnd.bind(this);
this.onMenuClick=this.onMenuClick.bind(this);
this.resetMenu=this.resetMenu.bind(this);
this.resetMenuOnDocClick=this.resetMenuOnDocClick.bind(this);
this.onDragStart=this.onDragStart.bind(this);
this.onDrag=this.onDrag.bind(this);
this.onDragEnd=this.onDragEnd.bind(this);
this.menuIdCount=0;
this.menuLevelCount=0;
this.isHidden=false;
this.isRoot=true;
onFirstTouch=function(e){if(!this.isTouchDevice){if(this.config.draggable){this.toggleDraggable("off");
}}this.isTouchDevice=true;
dragPadTop=200;
if(this.config.draggable){this.toggleDraggable("on");
this.onDragStart(e);
}document.removeEventListener("touchstart",onFirstTouch);
};
onFirstTouch=onFirstTouch.bind(this);
document.addEventListener("touchstart",onFirstTouch);
};
var menuPrototype=floatingActionMenu.prototype;
var dragActive=false;
var dragWasFired=false;
var currentX;
var currentY;
var dragX;
var dragY;
var initialX;
var initialY;
var offsetX=0;
var offsetY=0;
var dragPadTop=0;
menuPrototype.setConfig=function(config){var defaultConfig={iconPath:"assets/icons/",closeIcon:"close-button.png",wrapperClass:"flm-wrapr",iconClass:"flm-icon"};
this.config=config||defaultConfig;
this.config.iconClass=this.config.iconClass||"flm-icon";
this.config.wrapperClass=this.config.wrapperClass||"flm-wrapr";
};
menuPrototype.setData=function(data){this.data=data||menuData;
};
menuPrototype.getMenuId=function(){var id="flm"+this.menuIdCount;
this.menuIdCount=this.menuIdCount+1;
return id;
};
menuPrototype.trackMenuLevel=function(mode){if(mode=="up"){this.menuLevelCount=this.menuLevelCount+1;
}else{if(mode=="down"){this.menuLevelCount=this.menuLevelCount>0?this.menuLevelCount-1:this.menuLevelCount;
}}return this.menuLevelCount;
};
menuPrototype.storeList=function(list,menuCollection){menuCollection[list.getAttribute("data-flm-id")]=list;
};
menuPrototype.createOverlay=function(){var overlay=document.createElement("div");
overlay.classList.add("flm-overlay");
this.el.insertBefore(overlay,this.el.firstChild);
return overlay;
};
menuPrototype.showOverlay=function(){this.overlay.classList.add("flm--show");
};
menuPrototype.hideOverlay=function(){if(this.overlay==null){return;
}this.overlay.classList.remove("flm--show");
};
menuPrototype.createCloseButton=function(){var closeIcon=document.createElement("img");
var container=document.createElement("div");
closeIcon.src=this.config.iconPath+this.config.closeIcon;
container.classList.add("flm-close");
container.appendChild(closeIcon);
this.closeTrigger=container;
return container;
};
menuPrototype.showCloseButton=function(){this.closeTrigger.classList.add("flm--show");
};
menuPrototype.hideCloseButton=function(){this.closeTrigger.classList.remove("flm--show");
};
menuPrototype.createList=function(data,config,level,id){var list=document.createElement("ul");
var menuItemsFragm=this.createListItemsFragment(data,config);
list.appendChild(menuItemsFragm);
list.classList.add("flm-lvl"+level);
list.setAttribute("data-flm-id",id);
this.storeList(list,this.menus);
return list;
};
menuPrototype.createImageItem=function(data,config){var fragment=document.createDocumentFragment();
var img=document.createElement("img");
img.src=config.iconPath+"/"+data.icon;
img.classList.add(data.iconClassName);
fragment.appendChild(img);
return fragment;
};
menuPrototype.createDefaultItem=function(data,config){var wrapr=document.createElement("div");
var img=document.createElement("img");
var txt=null;
var divider=null;
var other=data.other?document.createElement("div"):null;
img.src=config.iconPath+data.icon;
img.classList.add(config.iconClass);
if(data.text){txt=document.createElement("span");
txt.textContent=data.text;
}wrapr.classList.add(config.wrapperClass);
wrapr.appendChild(img);
if(txt!==null){wrapr.appendChild(txt);
}if(data.other){divider=document.createElement("div");
divider.classList.add("flm-divider");
other.innerHTML=data.other;
other.classList.add("flm-other");
wrapr.appendChild(other);
other.insertAdjacentElement("beforebegin",divider);
}return wrapr;
};
menuPrototype.createListItem=function(data,config){var listItem=document.createElement("li");
var itemBody;
listItem.setAttribute("data-flm-id",data.id);
switch(data.type){case"image":itemBody=this.createImageItem(data,config);
break;
case"default":default:itemBody=this.createDefaultItem(data,config);
break;
}listItem.appendChild(itemBody);
return listItem;
};
menuPrototype.createListItemSubmenu=function(listItem,data,config){var subMenuFragm;
var submenuId;
var level;
submenuId=this.getMenuId();
level=this.trackMenuLevel("up");
subMenuFragm=this.createList(data.submenu,config,level,submenuId);
listItem.setAttribute("data-flm-sub",submenuId);
listItem.appendChild(subMenuFragm);
level=this.trackMenuLevel("down");
return listItem;
};
menuPrototype.createListItemsFragment=function(menuData,config){var itemsFragm=document.createDocumentFragment();
menuData.forEach(function(data){var listItem;
listItem=this.createListItem(data,config);
listItem=data.submenu&&data.submenu.length>0?this.createListItemSubmenu(listItem,data,config):listItem;
itemsFragm.appendChild(listItem);
}.bind(this));
return itemsFragm;
};
menuPrototype.toggleClickHandler=function(mode){var eventMethod;
if(mode==="on"){eventMethod="addEventListener";
}else{if(mode==="off"){eventMethod="removeEventListener";
}}this.el[eventMethod]("click",this.onMenuClick);
this.overlay[eventMethod]("click",this.resetMenu);
if(this.config.overlayDisabled){document[eventMethod]("click",this.resetMenuOnDocClick);
}};
menuPrototype.resetMenuOnDocClick=function(e){e.stopPropagation();
if(this.el.contains(e.target)===false){this.resetMenu();
}};
menuPrototype.onMenuClick=function(e){var clickedEl=e.target;
if(!this.isTouchDevice&&dragWasFired){dragWasFired=false;
return;
}if(clickedEl.parentElement===this.closeTrigger||clickedEl===this.closeTrigger){this.resetMenu();
return;
}while(clickedEl!=this.el&&clickedEl.getAttribute("data-flm-id")==undefined){clickedEl=clickedEl.parentNode;
if(clickedEl==undefined){return;
}}if(clickedEl.getAttribute("data-flm-id")!=undefined){this.executeItemCallback(clickedEl.getAttribute("data-flm-id"));
if(clickedEl.getAttribute("data-flm-sub")!=undefined){this.showSubMenu(clickedEl);
}}};
menuPrototype.injectComponent=function(){if(document.body==null){document.addEventListener("DOMContentLoaded",this.injectComponent);
}else{document.body.appendChild(this.overlay);
document.body.insertBefore(this.el,this.overlay);
if(this.bounceAnimationOn===false){setTimeout(function(){this.calcMenuHeight();
}.bind(this));
}document.removeEventListener("DOMContentLoaded",this.injectComponent);
}};
menuPrototype.showSubMenu=function(item){var submenuId;
var submenu;
var wraprItem;
var menuItem;
var menuItemParent;
var animateOverlay;
var animateSubmenu;
var submenuItems;
var transition;
var submenuLength;
if(typeof item==="string"){item=this.el.querySelector("li[data-flm-id="+item+"]");
}this.emit("beforeExpand");
if(this.config.draggable){this.toggleDraggable("off");
}this.toggleClickHandler("off");
if(this.config.expandAtInitialPosition){this.currentStyleTransform=this.el.style.transform;
this.el.style.removeProperty("transform");
}submenuId=item.getAttribute("data-flm-sub");
submenu=this.menus[submenuId];
wraprItem=item.querySelector(".flm-wrapr");
if(item.parentElement.getAttribute("data-flm-id")=="flm0"){animateSubmenu=function(){submenuItems=submenu.querySelectorAll("ul.flm-lvl1 > li");
submenuItems=Array.prototype.slice.apply(submenuItems);
submenuLength=submenuItems.length;
requestAnimationFrame(function(){submenuItems.forEach(function(item){item.firstChild.style.transition="none";
item.firstChild.style.opacity="0";
});
transition=submenu.style.transition;
submenu.style.transition="none";
requestAnimationFrame(function(){var totalTime=0;
submenu.style.transition=transition;
submenu.style.bottom=60+(submenuLength*73)+"px";
submenu.classList.add("flm--show");
submenuItems.reverse();
submenuItems.forEach(function(item,index){totalTime=totalTime+(index+1)*100;
setTimeout(function(){item.firstChild.style.transition=null;
item.firstChild.style.opacity="1";
},(index+1)*100);
});
setTimeout(function(){this.toggleClickHandler("on");
this.emit("afterExpand");
}.bind(this),totalTime);
}.bind(this));
}.bind(this));
}.bind(this);
animateOverlay=function(){wraprItem.style.visibility="hidden";
if(!this.config.overlayDisabled){this.showOverlay();
}animateSubmenu();
wraprItem.removeEventListener("transitionend",animateOverlay);
}.bind(this);
if(this.bounceAnimationOn===true){wraprItem.addEventListener("transitionend",animateOverlay);
}else{animateOverlay();
}wraprItem.classList.add("flm--whiteout");
this.showCloseButton();
this.activeMenu=submenu;
}if(this.activeMenu==null){wraprItem=this.menus.flm0.firstChild.firstChild;
this.menus.flm1.classList.add("flm--show");
if(!this.config.overlayDisabled){this.showOverlay();
}wraprItem.classList.add("flm--hide");
this.activeMenu=submenu;
}if(item.parentElement.getAttribute("data-flm-id")=="flm1"){menuItemParent=item.parentElement;
menuItem=menuItemParent.firstChild;
do{(function(menuItem){requestAnimationFrame(function(){menuItem.firstChild.classList.add("flm--hide");
requestAnimationFrame(function(){menuItem.firstChild.style.visibility="hidden";
this.menus.flm1.style.position="absolute";
this.menus.flm1.style.right="-1000px";
}.bind(this));
}.bind(this));
}.bind(this)(menuItem));
}while(menuItem=menuItem.nextSibling);
this.hideCloseButton();
this.activeMenu=submenu;
if(submenu!=null){submenu.classList.add("flm--show");
submenu.style.bottom=null;
}}this.isRoot=false;
};
menuPrototype.onBounceAnimationEnd=function(){var computedStyle;
this.calcMenuHeight();
this.emit("bounceInComplete");
this.toggleBounceAnimation("off");
computedStyle=window.getComputedStyle(this.el);
if(this.config.expandAtInitialPosition){this.originalStyleBottom=computedStyle.bottom;
this.originalStyleRight=computedStyle.right;
}this.currentDragPadY=parseInt(computedStyle.height)/2;
this.currentDragPadX=parseInt(computedStyle.width)/2;
};
menuPrototype.calcMenuHeight=function(){var slideUpMenu;
var height;
var liContainer;
if(this.menus.flm2==null){return;
}slideUpMenu=this.menus.flm2;
height=slideUpMenu.clientHeight;
liContainer=slideUpMenu.firstChild;
do{liContainer.style.height=height+"px";
}while(liContainer=liContainer.nextSibling);
slideUpMenu.style.bottom="-"+height+"px";
this.alignSlideUpMenuDivider();
this.el.removeEventListener("animationend",this.calcMenuHeight);
};
menuPrototype.alignSlideUpMenuDivider=function(){var slideUpMenu=this.menus.flm2;
var labels=slideUpMenu.querySelectorAll(".flm-wrapr span");
labels=Array.prototype.slice.apply(labels);
if(labels[0].offsetHeight>labels[1].offsetHeight){labels[1].style.height=labels[0].offsetHeight+"px";
return;
}if(labels[1].offsetHeight>labels[0].offsetHeight){labels[0].style.height=labels[1].offsetHeight+"px";
return;
}};
menuPrototype.resetMenu=function(){var flm1Child;
var flm1ChildflmWrapr;
var submenuItems;
var resetToRoot;
var removeWhiteIn;
if(this.isRoot){return;
}this.emit("beforeCollapse");
this.toggleClickHandler("off");
this.menus.flm0.querySelector(".flm-wrapr").style.removeProperty("visibility");
if(!this.menus.flm1){return;
}this.menus.flm1.style.position=null;
this.menus.flm1.style.right=null;
if(this.activeMenu==null){return;
}removeWhiteIn=function(){this.activeMenu.parentElement.firstChild.classList.remove("flm--whitein");
this.activeMenu.parentElement.firstChild.removeEventListener("transitionend",removeWhiteIn);
this.activeMenu=null;
if(this.config.expandAtInitialPosition){this.el.style.transform=this.currentStyleTransform;
}};
removeWhiteIn=removeWhiteIn.bind(this);
resetToRoot=function(){this.activeMenu.classList.remove("flm--show");
this.activeMenu.parentElement.firstChild.classList.remove("flm--hide");
if(this.activeMenu.getAttribute("data-flm-id")==="flm1"){this.activeMenu.parentElement.firstChild.classList.remove("flm--whiteout");
if(this.el!=null&&this.el.style.display!=="none"){this.activeMenu.parentElement.firstChild.classList.add("flm--whitein");
this.activeMenu.parentElement.firstChild.addEventListener("transitionend",removeWhiteIn);
}}if(this.activeMenu.getAttribute("data-flm-id")==="flm2"){this.menus.flm2.style.bottom="-"+this.menus.flm2.clientHeight+"px";
this.menus.flm1.classList.remove("flm--show");
this.menus.flm1.parentElement.firstChild.classList.remove("flm--hide");
this.menus.flm1.parentElement.firstChild.classList.remove("flm--whiteout");
flm1Child=this.menus.flm1.firstChild;
do{flm1ChildflmWrapr=flm1Child.firstChild;
flm1ChildflmWrapr.classList.remove("flm--hide");
flm1ChildflmWrapr.classList.remove("flm--whiteout");
flm1ChildflmWrapr.style.removeProperty("visibility");
}while(flm1Child=flm1Child.nextSibling);
}if(this.activeMenu.getAttribute("data-flm-id")!=="flm1"){this.activeMenu=null;
}this.hideCloseButton();
setTimeout(function(){this.hideOverlay();
this.emit("afterCollapse");
this.toggleClickHandler("on");
if(this.config.draggable){this.toggleDraggable("on");
}}.bind(this),400);
};
resetToRoot=resetToRoot.bind(this);
if(this.activeMenu===this.menus.flm1){submenuItems=this.activeMenu.querySelectorAll("ul.flm-lvl1 > li");
submenuItems=Array.prototype.slice.apply(submenuItems);
setTimeout(function(){resetToRoot();
this.isRoot=true;
}.bind(this),600);
submenuItems.forEach(function(item,index){setTimeout(function(){item.firstChild.style.transition=null;
item.firstChild.style.opacity="0";
},(index+1)*100);
});
return;
}resetToRoot();
this.isRoot=true;
};
menuPrototype.executeItemCallback=function(id){if(typeof this.config.actionCallbacks[id]=="function"){this.config.actionCallbacks[id]();
}};
menuPrototype.onDragStart=function(e){if(e.target==this.el||this.el.contains(e.target)){dragActive=true;
this.toggleClickHandler("off");
if(e.type=="touchstart"){initialX=e.touches[0].clientX-offsetX;
initialY=e.touches[0].clientY-offsetY;
}else{initialX=e.clientX-offsetX;
initialY=e.clientY-offsetY;
}}};
menuPrototype.onDragEnd=function(e){initialX=currentX;
initialY=currentY;
dragActive=false;
this.toggleClickHandler("on");
};
menuPrototype.onDrag=function(e){dragX=e.type=="touchmove"?e.touches[0].clientX:e.clientX;
dragY=e.type=="touchmove"?e.touches[0].clientY:e.clientY;
if(dragActive){if(dragX<=this.currentDragPadX||dragX>=document.body.clientWidth-this.currentDragPadX||dragY<=dragPadTop||dragY>document.documentElement.clientHeight-this.currentDragPadY){return;
}if(e.type=="touchmove"){currentX=e.touches[0].clientX-initialX;
currentY=e.touches[0].clientY-initialY;
}else{currentX=e.clientX-initialX;
currentY=e.clientY-initialY;
}offsetX=currentX;
offsetY=currentY;
this.el.style.transform="translate3d("+currentX+"px, "+currentY+"px, 0)";
dragWasFired=true;
}};
menuPrototype.toggleDraggable=function(mode){var eventAPI=mode=="on"?"addEventListener":"removeEventListener";
if(this.isTouchDevice){document.documentElement[eventAPI]("touchstart",this.onDragStart);
document.documentElement[eventAPI]("touchmove",this.onDrag);
document.documentElement[eventAPI]("touchend",this.onDragEnd);
}else{document.documentElement[eventAPI]("mousedown",this.onDragStart);
document.documentElement[eventAPI]("mousemove",this.onDrag);
document.documentElement[eventAPI]("mouseup",this.onDragEnd);
}};
menuPrototype.render=function(reRender){var computedStyle;
if(reRender){if(this.el!=null){this.menus={};
this.menuIdCount=0;
this.menuLevelCount=0;
this.isRendered=null;
this.el.remove();
this.overlay.remove();
this.el=null;
}}if(this.el!=null){return;
}this.el=document.createElement("div");
this.toggleBounceAnimation(reRender?"off":"on");
this.overlay=this.createOverlay();
this.el.id="floatMenu";
if(this.config.draggable){this.toggleDraggable("on");
}this.el.classList.add("flm-menu");
this.el.appendChild(this.createCloseButton());
this.el.appendChild(this.createList(this.data,this.config,this.level,this.getMenuId()));
this.toggleClickHandler("on");
this.el.addEventListener("dblclick",function(e){e.preventDefault();
});
if(this.bounceAnimationOn===true){this.el.addEventListener("animationend",this.onBounceAnimationEnd);
}this.injectComponent();
this.isRendered=true;
if(this.bounceAnimationOn==false){computedStyle=window.getComputedStyle(this.el);
if(this.config.expandAtInitialPosition){this.originalStyleBottom=computedStyle.bottom;
this.originalStyleRight=computedStyle.right;
}this.currentDragPadY=parseInt(computedStyle.height)/2;
this.currentDragPadX=parseInt(computedStyle.width)/2;
}};
menuPrototype.show=function(disableBounce){if(!this.isRendered){this.render();
}else{if(disableBounce){this.toggleBounceAnimation("off");
}this.el.style.removeProperty("display");
}this.emit("show");
this.isHidden=false;
};
menuPrototype.hide=function(){if(this.isHidden){return;
}if(this.el==null){return;
}this.el.style.display="none";
this.hideOverlay();
this.resetMenu();
this.isHidden=true;
};
menuPrototype.toggleBounceAnimation=function(mode){if(mode==="off"){this.el.classList.remove("flm--bounce");
this.bounceAnimationOn=false;
return;
}if(mode==="on"){this.el.classList.add("flm--bounce");
this.bounceAnimationOn=true;
}};
menuPrototype.destroy=function(){this.toggleClickHandler("off");
this.menus=null;
this.data=null;
this.config=null;
this.bounceAnimationOn=null;
this.isRendered=null;
this.el.remove();
this.overlay.remove();
this.el=null;
this.overlay=null;
this.menuIdCount=null;
this.menuLevelCount=null;
};
module.exports=floatingActionMenu;
}),"./src/components/termsAndConditions/termsAndConditions.js":(function(module,exports,__webpack_require__){var events=__webpack_require__("./src/lib/events.js");
var Checkbox=__webpack_require__("./src/components/checkbox/checkbox.js");
var getContent=__webpack_require__("./src/lib/localization.js").getContent;
var getLanguage=__webpack_require__("./src/lib/localization.js").getLanguage;
var css={container:"rm-terms",hide:"rm-terms--hide"};
var tc=function(config,nfsVars){events(this);
this.config=config;
this.nfsVars=nfsVars;
this.chkbox=null;
this.btn=null;
this.el=this.init();
this.setEventHandlers();
};
var tcProto=tc.prototype;
tcProto.init=function(){var container;
var tcLink;
var logo;
logo=getLanguage()=="en_us"?"scbPriorityLogo-en_us.png":"scbPriorityLogo-"+getLanguage()+".jpg";
container=document.createElement("div");
container.id="rmTerms";
container.classList.add(css.container);
container.innerHTML='<img class="tc-scbLogo" src="'+this.config.iconPath+logo+'"/>        <h1><span class="tc-greeting">'+getContent("greet")+'</span>        <br/>        <span class="tc-name">'+this.nfsVars.c2cDisplayName+'!</span></h1>        <div class="tc-main">'+getContent("tcMain")+'</div>        <button disabled class="tc-btn-continue tc-disabled">'+getContent("continueText")+"</button>";
this.chkbox=new Checkbox("tcCheck");
this.chkbox.setLabel(getContent("tcChkBoxLabel"));
this.btn=container.querySelector("button");
tcLink=this.chkbox.el.querySelector("a");
if(tcLink){tcLink.addEventListener("click",function(e){e.preventDefault();
e.stopPropagation();
window.open(tcLink.href,"_blank");
});
}container.insertBefore(this.chkbox.el,this.btn);
return container;
};
tcProto.hide=function(){this.el.classList.add(css.hide);
};
tcProto.show=function(){this.el.classList.remove(css.hide);
};
tcProto.destroy=function(){this.el.remove();
this.config=null;
this.chkbox=null;
this.btn=null;
};
tcProto.setGreeting=function(greeting){this.el.querySelector(".tc-greeting").textContent=greeting;
};
tcProto.setName=function(name){this.el.querySelector(".tc-name").textContent=name;
};
tcProto.setMainContent=function(main){this.el.querySelector(".tc-main").innerHTML=main;
};
tcProto.setCheckboxLabel=function(label){this.chkbox.setLabel(label);
};
tcProto.setBtnLabel=function(label){this.el.querySelector(".tc-btn-continue").textContent=label;
};
tcProto.setEventHandlers=function(){this.chkbox.on("checked",function(){this.btn.removeAttribute("disabled");
this.btn.classList.remove("tc-disabled");
}.bind(this));
this.chkbox.on("unchecked",function(){this.btn.setAttribute("disabled","");
this.btn.classList.add("tc-disabled");
}.bind(this));
this.btn.addEventListener("click",function(){if(this.chkbox.isChecked){this.btn.setAttribute("disabled","");
this.btn.classList.add("tc-disabled");
this.emit("termsConditonsContinue");
}}.bind(this));
};
module.exports=tc;
}),"./src/components/tooltip/tooltip.js":(function(module,exports){var tooltip=function(config){this.cssClass={content:"flm-tooltip-content",pointer:"flm-tooltip-pointer",position:{bottom:"flm-position--bottom",top:"flm-position--top",left:"flm-position--left",right:"flm-position--right"},show:"flm-tooltip--show"};
this.tooltipContent=null;
this.tooltipIsOn=false;
this.config=config;
this.tooltip=this.createTooltip("flmTooltip",this.cssClass.content,this.cssClass.pointer,this.cssClass.position[config.position]);
};
var tooltipPrototype=tooltip.prototype;
tooltipPrototype.createTooltip=function(id,contentCssClass,pointerCssClass,positionCssClass){var tooltip=document.createElement("div");
var tri=document.createElement("div");
var content=document.createElement("div");
content.classList.add(contentCssClass);
tri.classList.add(pointerCssClass);
tri.classList.add(positionCssClass);
tooltip.id=id;
tooltip.appendChild(tri);
tooltip.appendChild(content);
document.body.appendChild(tooltip);
return tooltip;
};
tooltipPrototype.showToolTip=function(text,triggerElement,position){position=position||this.config.position;
this.tooltipContent=this.tooltipContent||this.tooltip.querySelector("."+this.cssClass.content);
this.tooltipPointer=this.tooltipPointer||this.tooltip.querySelector("."+this.cssClass.pointer);
this.tooltipContent.innerHTML=text;
if(position){this.tooltipPointer.classList.remove(this.cssClass.position.bottom);
this.tooltipPointer.classList.remove(this.cssClass.position.top);
this.tooltipPointer.classList.remove(this.cssClass.position.left);
this.tooltipPointer.classList.remove(this.cssClass.position.right);
this.tooltipPointer.classList.add(this.cssClass.position[position]);
}this.tooltip.classList.add(this.cssClass.show);
this.calculateTooltipPosition(triggerElement,position);
this.tooltipIsOn=true;
if(this.config.hideOnWindowResize){window.addEventListener("resize",this.hideToolTip.bind(this));
}};
tooltipPrototype.hideToolTip=function(e){if(e!=null){e.stopPropagation();
}if(this.tooltipIsOn===false){return;
}this.tooltip.classList.remove(this.cssClass.show);
this.tooltipContent=this.tooltipContent||this.tooltip.querySelector(this.cssClass.content);
this.tooltipContent.innerHTML="";
this.tooltipIsOn=false;
if(this.config.hideOnWindowResize){window.removeEventListener("resize",this.hideToolTip);
}this.tooltip.style.top="-9999px";
this.tooltip.style.left="-9999px";
};
tooltipPrototype.calculateTooltipPosition=function(tooltipTrigger,position){var triggerRect=tooltipTrigger.getBoundingClientRect();
var tooltipRect=this.tooltip.getBoundingClientRect();
var margin=20;
var widthDiff;
var heightDiff;
widthDiff=Math.abs(tooltipTrigger.offsetWidth-tooltipRect.width)/2;
heightDiff=Math.abs(tooltipTrigger.offsetHeight-tooltipRect.height)/2;
switch(position){case"top":this.tooltip.style.left=(tooltipTrigger.offsetWidth>tooltipRect.width?triggerRect.left+widthDiff:triggerRect.left-widthDiff)+"px";
this.tooltip.style.top=triggerRect.top-this.tooltip.offsetHeight-margin+"px";
break;
case"bottom":this.tooltip.style.left=(tooltipTrigger.offsetWidth>tooltipRect.width?triggerRect.left+widthDiff:triggerRect.left-widthDiff)+"px";
this.tooltip.style.top=triggerRect.bottom+margin+"px";
break;
case"left":this.tooltip.style.top=(tooltipTrigger.offsetHeight>tooltipRect.height?triggerRect.top+heightDiff:triggerRect.top-heightDiff)+"px";
this.tooltip.style.left=triggerRect.left-this.tooltip.offsetWidth-margin+"px";
break;
case"right":this.tooltip.style.top=(tooltipTrigger.offsetHeight>tooltipRect.height?triggerRect.top+heightDiff:triggerRect.top-heightDiff)+"px";
this.tooltip.style.left=triggerRect.right+margin+"px";
break;
}};
module.exports=tooltip;
}),"./src/lib/cssloader.js":(function(module,exports){var loadCss=function(url,onLoad,onError){var link=document.createElement("link");
link.type="text/css";
link.rel="stylesheet";
if(onError){link.onerror=function(){onError();
};
}if(onLoad){link.onload=function(){onLoad();
};
}link.href=url;
document.head.appendChild(link);
};
module.exports=loadCss;
}),"./src/lib/events.js":(function(module,exports){var Events=function(target){var events={};
var empty=[];
var listOfBindedCtxPair;
var bindedFnCtxPair;
var i;
target=target||this;
target.on=function(type,handler,ctx){events[type]=events[type]||[];
events[type].push([handler,ctx]);
};
target.off=function(type,handler){type||(events={});
listOfBindedCtxPair=events[type]||empty,i=listOfBindedCtxPair.length=handler?listOfBindedCtxPair.length:0;
while(i--){if(handler==listOfBindedCtxPair[i][0]){listOfBindedCtxPair.splice(i,1);
}}};
target.emit=function(type){listOfBindedCtxPair=events[type]||empty;
i=0;
while(bindedFnCtxPair=listOfBindedCtxPair[i++]){bindedFnCtxPair[0].apply(bindedFnCtxPair[1],empty.slice.call(arguments,1));
}};
};
module.exports=Events;
}),"./src/lib/jsloader.js":(function(module,exports){var loadJs=function(url,onLoad,onError){var newScript=document.createElement("script");
if(onError){newScript.onerror=function(){onError();
};
}if(onLoad){newScript.onload=function(){onLoad();
};
}document.head.appendChild(newScript);
newScript.src=url;
};
module.exports=loadJs;
}),"./src/lib/localization.js":(function(module,exports){var content={};
var lang="en_us";
module.exports={setContent:function(ct){content=ct;
},getContent:function(key){return content[lang][key];
},setLanguage:function(langCode){if(langCode=="en"){return;
}lang=langCode.toLowerCase();
},getLanguage:function(){return lang;
}};
}),"./src/lib/menuDataFactory.js":(function(module,exports,__webpack_require__){var getContent=__webpack_require__("./src/lib/localization.js").getContent;
module.exports=function menuDataFactory(type,typeMap,actionCallbacks,country,nfsVars,suppressSubWhenSingleItem){var level;
var menuItems;
var menuData;
if(!type||type=="null"){console.log("c2cCustomerSegment not available");
return;
}menuData=[{id:"ctoc",icon:"stacy-new.png",submenu:[{id:typeMap.B,text:getContent("chatbotMenuLabel"),icon:"avatar-chat.png"},{id:typeMap.C,text:getContent("txtChatMenuLabel"),icon:"avatar-chat.png"},{id:typeMap.R,text:getContent("rmChatMenuLabel"),icon:"avatar-rm.png"},{id:typeMap.M,text:getContent("sendMailLabel"),icon:"avatar-mail.png"},{id:typeMap.A,text:getContent("audioChatMenuLabel"),icon:"avatar-call.png"}]}];
menuItems=type.split("");
level=menuItems.shift();
if(suppressSubWhenSingleItem===true&&level.toUpperCase()=="S"){var count=0;
for(var i=0;
i<menuItems.length;
i++){if(menuItems[i].toUpperCase()!="X"){count=count+1;
}if(count>1){break;
}}if(count==1){level="X";
}}if(level.toUpperCase()=="X"){delete menuData[0].submenu;
for(var i=0;
i<menuItems.length;
i++){if(menuItems[i]!="X"){actionCallbacks.ctoc=actionCallbacks[typeMap[menuItems[i]]];
}}return{data:menuData,actionCallbacks:actionCallbacks};
}for(var prop in typeMap){if(menuItems.indexOf(prop)===-1){delete typeMap[prop];
}else{typeMap[typeMap[prop]]=prop;
delete typeMap[prop];
}}if(level.toUpperCase()==="S"){menuData[0].submenu.forEach(function(submenuItem){if(submenuItem.submenu){delete submenuItem.submenu;
}});
}menuData[0].submenu=menuData[0].submenu.filter(function(menuItem){return typeMap.hasOwnProperty(menuItem.id);
});
return{data:menuData,actionCallbacks:actionCallbacks};
};
}),"./src/lib/moxtraInterface-NFS.js":(function(module,exports,__webpack_require__){var XHR=__webpack_require__("./src/lib/xhr.js");
var storage=__webpack_require__("./src/lib/storage.js");
var storageKeyNames=__webpack_require__("./src/lib/storageNames.js");
var host="https://mepsandbox.moxtra.com";
var endpointsPath={apiPath:"/scb-integration/api/v1",initParams:"/scb/initCustParams",authV2:"/core/oauth/token",init:"/scb",initParams:"/scb/initCustParams",unreadFeeds:"/core/me/unreadfeeds?version=0"};
var endpoints;
var moxtraInterface={token:null,unread:null,setHost:function(configHost){host=configHost;
endpoints={mepBaseUrl:host+endpointsPath.apiPath,initParams:host+endpointsPath.initParams,authV2:host+endpointsPath.apiPath+endpointsPath.authV2,init:host+endpointsPath.init,initParams:host+endpointsPath.initParams,unreadFeeds:host+endpointsPath.apiPath+endpointsPath.unreadFeeds};
},setRMAccessToken:function(token){this.token=token;
storage.persist(storageKeyNames.rmToken,this.token);
},reqUnreadFeedsCount:function(relId,onUnreadReceived,onComplete,onError){XHR.resetRequestHeader();
XHR.setContentType("application/json");
XHR.setRequestHeader("Authorization","Bearer "+this.token);
XHR.setRequestHeader("uid",relId);
XHR.get(endpoints.unreadFeeds).success(function(response){if(response.data!=null&&response.data.unread_feeds!=null){this.unread=response.data.unread_feeds;
}if(typeof onUnreadReceived=="function"){onUnreadReceived(this.unread);
}if(typeof onComplete=="function"){onComplete();
}}.bind(this)).error(function(error){console.log("reqUnreadFeed::"+error);
if(typeof onError){onError(error);
}});
},getToken:function(){return this.token;
},getAccessTokenV2:function(relId,onTokenReceived,onTokenError){var ids;
var tempUserdata={client_id:null,client_secret:null,orgid:null,uniqueid:relId,app_id:"scb_cus_app",mep_base_url:endpoints.mepBaseUrl};
if(window.c2cMoxtra!=null&&window.c2cMoxtra.getMoxtraIDs!=null){if(typeof window.c2cMoxtra.getMoxtraIDs=="function"){ids=window.c2cMoxtra.getMoxtraIDs();
tempUserdata.client_id=ids.client_id;
tempUserdata.client_secret=ids.client_secret;
tempUserdata.orgid=ids.orgid;
}}this.token=this.retrieveTokenFromStorage();
if(this.token!=null){if(onTokenReceived&&typeof onTokenReceived=="function"){onTokenReceived();
}return;
}XHR.setContentType("application/json");
XHR.post(endpoints.authV2,JSON.stringify(tempUserdata)).success(function(response){if(response.access_token==undefined||response.access_token==""||response.access_token=="null"){onTokenError(new Error("token_invalid"));
return;
}if(onTokenReceived&&typeof onTokenReceived=="function"){this.token=response.access_token;
storage.persist(storageKeyNames.rmToken,response.access_token);
onTokenReceived();
}}.bind(this)).error(function(response){onTokenError(new Error("token_invalid"));
return;
});
},retrieveTokenFromStorage:function(){if(window.localStorage){return window.localStorage.getItem("cnkRMChatToken");
}return;
},init:function(onInitFailure,onInitSuccess,onUnreadMessage,onTwoFactorAuth,containerId,moxtraLangCode){if(window.Mep==undefined){console.error("Mep is not available");
return;
}var isRefresh=storage.getPersisted(storageKeyNames.moxtraFirstInitDone)==="1";
var options={isRefresh:isRefresh,access_token:this.token,locale_code:moxtraLangCode,base_url:endpoints.init,user_type:"",iframe:true,iframewidth:"100%",iframeheight:"100%",tagid4iframe:containerId,onInitFailure:onInitFailure,check2FAStatus:function(data){sessionStorage.setItem("2fa_date",JSON.stringify(data));
sessionStorage.getItem("2fa_date");
Mep.set2FAStatus(sessionStorage.getItem("2fa_date"));
},onInitSuccess:onInitSuccess,getUnreadMessageCount:onUnreadMessage,start_transaction_execution:function(event){window.Mep.loadDocumentView(event.document_options);
}};
window.Mep.showCustomerView(options);
}};
module.exports=moxtraInterface;
}),"./src/lib/nfsInterface.js":(function(module,exports,__webpack_require__){var XHR=__webpack_require__("./src/lib/xhr.js");
var refreshTokenUrl=null;
var reqCount=0;
var nfsInterface={setConfig:function(config){this.config=config;
},setEndpointUrl:function(url){refreshTokenUrl=url;
},fetchRefreshToken:function(onSuccess,onFailure){reqCount=reqCount+1;
if(reqCount>3){if(typeof onFailure=="function"){onFailure();
reqCount=0;
return;
}}XHR.resetRequestHeader();
XHR.setRequestHeader("Accept","application/json,");
XHR.setContentType("application/json");
XHR.get(refreshTokenUrl).success(function(response){if(onSuccess&&typeof onSuccess=="function"){onSuccess(response);
reqCount=0;
}}).error(function(){if(reqCount<=3){this.fetchRefreshToken(onSuccess,onFailure);
}}.bind(this));
},requestKeepAlive:function(keepAliveUrl,onSuccess,onError){XHR.resetRequestHeader();
XHR.setRequestHeader("Accept","application/json,");
XHR.setContentType("application/json");
XHR.get(keepAliveUrl).success(function(response){if(onSuccess&&typeof onSuccess=="function"){onSuccess(response);
}}).error(function(response){if(onError&&typeof onError=="function"){onError(response);
}});
},checkIfLiveBankHasUnreadMessages:function(){var responseMethods;
var api;
responseMethods={hasUnread:function(){},noUnread:function(){}};
XHR.resetRequestHeader();
XHR.setRequestHeader("Accept","application/json,");
XHR.setContentType("application/json");
XHR.get(this.config.livebankUnreadCheckUrl).success(function(response){if(JSON.parse(response.unreadMessageAvailable)==true){responseMethods.hasUnread.apply(responseMethods,response);
}else{responseMethods.noUnread.apply(responseMethods,response);
}}).error(function(response){console.log(response);
});
api={hasUnread:function(callback){responseMethods.hasUnread=callback;
return api;
},noUnread:function(callback){responseMethods.noUnread=callback;
return api;
}};
return api;
}};
module.exports=nfsInterface;
}),"./src/lib/popupWindow.js":(function(module,exports){module.exports=function openCenteredWindow(url,windowName){var c2cleft=(screen.width/2)-(854/2);
var c2ctop=(screen.height/2)-(480/2);
var windowoption="width=854,height=480,toolbar=no,resizable=yes,scrollbars=yes,top="+c2ctop+", left="+c2cleft;
return window.open(url,windowName,windowoption);
};
}),"./src/lib/storage.js":(function(module,exports){var browserStorage={set:function(key,value){if(sessionStorage){sessionStorage.setItem(key,value);
}else{document.cookie=key+"="+value;
}},get:function(key){if(sessionStorage){return sessionStorage.getItem(key);
}else{var match=document.cookie.match(new RegExp("(^| )"+key+"=([^;]+)"));
if(match){return match[2];
}}},del:function(key){if(localStorage){localStorage.removeItem(key);
}else{document.cookie=key+"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;"+window.location.host;
}},persist:function(key,value){if(localStorage){localStorage.setItem(key,value);
}else{document.cookie=key+"="+value;
}},getPersisted:function(key){if(localStorage){return localStorage.getItem(key);
}else{var match=document.cookie.match(new RegExp("(^| )"+key+"=([^;]+)"));
if(match){return match[2];
}}}};
module.exports=browserStorage;
}),"./src/lib/storageNames.js":(function(module,exports){var storageKeyNames={rmUnread:"cnkRMHasUnreadMsg",lbUnread:"cnkLBHasUnreadMsg",rmToken:"cnkRMChatToken",activeChatView:"cnkChatMode",frameState:"cnkWindowFrameState",twoFA:"cnkTwoFa",relId:"cnkUniq",moxtraFirstInitDone:"cnkMxtFirstInitDone",tcDone:"cnkTcDone",tcVersion:"cnkTcVersion",chatbotLanguage:"cnkBotLanguage",chatbotIbankLogin:"cnkBotIbankLogin",nfsVars:"c2cNfsVars"};
module.exports=storageKeyNames;
}),"./src/lib/treeutil.js":(function(module,exports){var currentDepth=0;
var maxDepth=0;
var traverse=function(node,jointPropName,callback){var children=node[jointPropName];
callback(node,currentDepth,maxDepth);
if(children==null){return;
}currentDepth=currentDepth+1;
maxDepth=currentDepth;
children.forEach(function(child){traverse(child,jointPropName,callback);
});
currentDepth=currentDepth-1;
return maxDepth;
};
module.exports=traverse;
}),"./src/lib/windowMessage.js":(function(module,exports){var callbacks={};
module.exports={setTrustedOrigin:function(origin){trustedOrigin=origin;
},on:function(eventName,callback){if(typeof callback=="function"){callbacks[eventName]=callbacks[eventName]||[];
callbacks[eventName].push(callback);
}},off:function(eventName,callback){var i;
if(!callbacks[eventName]){return;
}i=callbacks[eventName].indexOf(callback);
if(i!==-1){callbacks[eventName].splice(i,1);
}},init:function(){window.addEventListener("message",function(event){var eventData;
eventData=typeof event.data=="string"?JSON.parse(event.data):event.data;
if(!eventData.action){return;
}if(callbacks[eventData.action]&&callbacks[eventData.action].length>0){for(var i=0;
i<callbacks[eventData.action].length;
i++){if(typeof callbacks[eventData.action][i]=="function"){callbacks[eventData.action][i](eventData);
}}}},false);
},close:function(){window.removeEventListener("message");
}};
}),"./src/lib/xhr.js":(function(module,exports){var XHR={};
var config={contentType:"application/x-www-form-urlencoded",headers:{}};
var parse=function(req){var result;
try{result=JSON.parse(req.responseText);
}catch(e){result=req.responseText;
}return[result,req];
};
var xhr=function(type,url,data){var methods={success:function(){},error:function(){}};
var XHR=window.XMLHttpRequest;
var request=new XHR();
request.open(type,url,true);
request.setRequestHeader("Content-type",config.contentType);
for(var header in config.headers){if(config.headers.hasOwnProperty(header)){request.setRequestHeader(header,config.headers[header]);
}}request.onreadystatechange=function(){var req;
if(request.readyState===4){req=parse(request);
if(request.status>=200&&request.status<300){methods.success.apply(methods,req);
}else{methods.error.apply(methods,req);
}}};
request.send(data);
var API={success:function(callback){methods.success=callback;
return API;
},error:function(callback){methods.error=callback;
return API;
}};
return API;
};
XHR.get=function(src){return xhr("GET",src);
};
XHR.post=function(url,data){return xhr("POST",url,data);
};
XHR.setContentType=function(value){config.contentType=value;
};
XHR.setRequestHeader=function(key,val){config.headers[key]=val;
};
XHR.resetRequestHeader=function(){config.headers={};
};
XHR.params=function(obj){return Object.keys(obj).map(function(key){return key+"="+obj[key];
}).join("&");
};
module.exports=XHR;
}),"./src/nfs/hk/clicktochat.component.js":(function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);
var components_clickToChatWidget_clickToChatWidget_NFS__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/clickToChatWidget/clickToChatWidget-NFS.js");
var components_clickToChatWidget_clickToChatWidget_NFS__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(components_clickToChatWidget_clickToChatWidget_NFS__WEBPACK_IMPORTED_MODULE_0__);
var lib_localization__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/lib/localization.js");
var lib_localization__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(lib_localization__WEBPACK_IMPORTED_MODULE_1__);
var lib_menuDataFactory__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/lib/menuDataFactory.js");
var lib_menuDataFactory__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(lib_menuDataFactory__WEBPACK_IMPORTED_MODULE_2__);
var _content_content__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/nfs/hk/content/content.js");
var _content_content__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_content_content__WEBPACK_IMPORTED_MODULE_3__);
var _clicktochat_scss__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/nfs/hk/clicktochat.scss");
var _clicktochat_scss__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_clicktochat_scss__WEBPACK_IMPORTED_MODULE_4__);
window.c2c={};
window.c2c.ClickToChatWidget=components_clickToChatWidget_clickToChatWidget_NFS__WEBPACK_IMPORTED_MODULE_0___default.a;
window.c2c.menuDataFactory=lib_menuDataFactory__WEBPACK_IMPORTED_MODULE_2___default.a;
window.c2c.getContent=lib_localization__WEBPACK_IMPORTED_MODULE_1__.getContent;
window.c2c.setLanguage=lib_localization__WEBPACK_IMPORTED_MODULE_1__.setLanguage;
Object(lib_localization__WEBPACK_IMPORTED_MODULE_1__.setContent)(_content_content__WEBPACK_IMPORTED_MODULE_3___default.a);
}),"./src/nfs/hk/clicktochat.scss":(function(module,exports,__webpack_require__){}),"./src/nfs/hk/content/content.js":(function(module,exports){var content={en_us:{stacyToolTipText:"Need Help?",chatbotMenuLabel:"Chat with Stacy",txtChatMenuLabel:"Chat with Stacy",rmChatMenuLabel:"My RM",sendMailLabel:"E-mail",chatHistory:"Chat History",greet:"Welcome",tcTitle:"My RM",tcMain:"By using this application, you agree to be bound by the Terms, as supplemented by and read together with the prevailing terms applicable to your banking relationship.",tcChkBoxLabel:'*I agree to the <a href="https://av.sc.com/hk/content/docs/hk-c2rm-tnc-en.pdf" target="_blank">terms and conditions</a>',continueText:"Continue"},zh_cn:{stacyToolTipText:"需要帮忙",chatbotMenuLabel:"聯絡Stacy",txtChatMenuLabel:"聯絡Stacy",rmChatMenuLabel:"My RM",sendMailLabel:"發送電郵",chatHistory:"聊天记录",greet:"欢迎",tcTitle:"My RM",tcMain:"一经使用此应用程式即表示您同意受本条款及细则所约束以及同意本条款及细则将补充有关现有适用於您与本行的银行服务有关条款及细则。",tcChkBoxLabel:'*我同意有关<a target="_blank" href="https://av.sc.com/hk/zh/content/docs/hk-c2rm-tnc-sc.pdf">条款及细则</a>',continueText:"继续"},zh_hk:{stacyToolTipText:"需要幫忙",chatbotMenuLabel:"聯絡Stacy",txtChatMenuLabel:"聯絡Stacy",rmChatMenuLabel:"My RM",sendMailLabel:"发送电邮",chatHistory:"聊天記錄",greet:"歡迎",tcTitle:"My RM",tcMain:"一經使用此應用程式即表示您同意受本條款及細則所約束以及同意本條款及細則將補充有關現有適用於您與本行的銀行服務有關條款及細則。",tcChkBoxLabel:'*我同意有關<a target="_blank" href="https://av.sc.com/hk/zh/content/docs/hk-c2rm-tnc-tc.pdf">條款及細則</a>',continueText:"繼續"}};
module.exports=content;
})});
